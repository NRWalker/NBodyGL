       __     __) ______                 _____)     _    
      (, /|  /   (, /    )     /)      /        ___/__)  
        / | /      /---(  ____(/      /   ___  (, /      
     ) /  |/    ) / ____)(_)(_(_ (_/_/     / )   /       
    (_/   '    (_/ (            .-/ (____ /     (_____   
                               (_/                     ) 
========================================================
						   
Nick Walker
-----------

27 February 2013
----------------

V 1.3
-----

This program creates a solar system and uses Newton's Law of gravitation to 
animate motion. It allows the user to manipulate and explore the system at will.

Requires:
---------

	*	OpenGL - a graphics library
		-	http://pyopengl.sourceforge.net/
		
	*	numpy - a math library
		-	http://www.numpy.org/
		
Usage:
------

	*	Run the NBodyV_1_3.py file
	
	*	The extra folders allow for people without Python to run the program
		on a Windows machine by running the executable in the \dist folder
	
	*	Collisions with debris are still very unstable, but they are relatively
		easy to disable. You can disable collisions by commenting out the line 
		with updateCollisions(); also, if you just want to remove debris, comment 
		out the if block in the updateCollsions() function and the else: line in 
		the NewtonV_1_3.py file, then tab over everything that was in the else block
	
Features:
---------

	*	Gravitation between multiple Astronomical objects
	
	*	Adding and subtracting objects from the system
	
	*	Camera rotation about the center of the system with keyboard input
	
	*	Scene traversal with keyboard input
	
	*	Scene traversal with mouse input
	
	*	Collisions with debris
	
Future Features:
----------------
		
	*	More variation in mass and density
	
	*	Better collisions (fix bugs with debris and conservation of energy)
	
	*	Larger systems
	
	*	Generation of high speed, high mass external Astronomical objects
	
	*	N number of stars
	
	*	Lighting control
	
	*	Bugfixes for movement
	
Controls:
---------

	*	w: move forward
	
	*	s: move backward
	
	*	a: turn left
	
	*	d: turn right
	
	*	e: turn up
	
	*	q: turn down
	
	*	i: rotate camera up
	
	*	k: rotate camera down
	
	*	j: rotate camera left
	
	*	l: rotate camera right
	
	*	]: add Astronomical object
	
	*	[: remove Astronomical object
	
	*	mouse: changes camera facing
	
	*	left click: move forward
	
	*	right click: move backward
	
	*	middle click: stop moving forward or backward

Credits:
--------

	*	Nick Walker
	